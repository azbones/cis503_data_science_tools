ggplot(uni, aes(uni$grade)) +
geom_histogram(bins=200) +
xlab('Grade') +
ggtitle('Distribution of 1,000,000 Random Values from a Uniform Distribution')
runif
?runif
uni <- as.tibble(runif(1000000, min=0, max=100))
uni <- rename(uni, grade = value)
ggplot(uni, aes(uni$grade)) +
geom_histogram(bins=200) +
xlab('Grade') +
ggtitle('Distribution of 1,000,000 Random Values from a Uniform Distribution')
lognorm<-as.tibble(rlnorm(1000000, 1, .75))
lognorm <- rename(lognorm, grade = value)
ggplot(lognorm, aes(lognorm$grade)) +
geom_histogram(bins=100) +
xlab('Grade') +
ggtitle('Distribution of 1,000,000 Random Values from a Log Normal Distribution')
lognorm<-as.tibble(rlnorm(1000000, 1, .25))
lognorm <- rename(lognorm, grade = value)
ggplot(lognorm, aes(lognorm$grade)) +
geom_histogram(bins=100) +
xlab('Grade') +
lognorm<-as.tibble(rlnorm(1000000, 1, .8))
lognorm <- rename(lognorm, grade = value)
ggplot(lognorm, aes(lognorm$grade)) +
geom_histogram(bins=100) +
xlab('Grade') +
ggtitle('Distribution of 1,000,000 Random Values from a Log Normal Distribution')
lognorm<-as.tibble(rlnorm(1000000, 1, .4))
lognorm <- rename(lognorm, grade = value)
ggplot(lognorm, aes(lognorm$grade)) +
geom_histogram(bins=100) +
xlab('Grade') +
ggtitle('Distribution of 1,000,000 Random Values from a Log Normal Distribution')
lognorm<-as.tibble(rlnorm(1000000, 100, .4))
lognorm <- rename(lognorm, grade = value)
ggplot(lognorm, aes(lognorm$grade)) +
geom_histogram(bins=100) +
xlab('Grade') +
ggtitle('Distribution of 1,000,000 Random Values from a Log Normal Distribution')
lognorm<-as.tibble(rlnorm(1000000, 10, .4))
lognorm <- rename(lognorm, grade = value)
ggplot(lognorm, aes(lognorm$grade)) +
geom_histogram(bins=100) +
xlab('Grade') +
ggtitle('Distribution of 1,000,000 Random Values from a Log Normal Distribution')
lognorm<-as.tibble(rlnorm(1000000, 2, .4))
lognorm <- rename(lognorm, grade = value)
ggplot(lognorm, aes(lognorm$grade)) +
geom_histogram(bins=100) +
xlab('Grade') +
ggtitle('Distribution of 1,000,000 Random Values from a Log Normal Distribution')
lognorm<-as.tibble(rlnorm(1000000, 4, .4))
lognorm <- rename(lognorm, grade = value)
ggplot(lognorm, aes(lognorm$grade)) +
geom_histogram(bins=100) +
xlab('Grade') +
ggtitle('Distribution of 1,000,000 Random Values from a Log Normal Distribution')
lognorm<-as.tibble(rlnorm(1000000, 3.5, .4))
lognorm <- rename(lognorm, grade = value)
ggplot(lognorm, aes(lognorm$grade)) +
geom_histogram(bins=100) +
xlab('Grade') +
ggtitle('Distribution of 1,000,000 Random Values from a Log Normal Distribution')
lognorm<-as.tibble(rlnorm(1000000, 3.2, .4))
lognorm <- rename(lognorm, grade = value)
ggplot(lognorm, aes(lognorm$grade)) +
geom_histogram(bins=100) +
xlab('Grade') +
ggtitle('Distribution of 1,000,000 Random Values from a Log Normal Distribution')
mean(uni$grade)
mean(lognorm$grade)
norm <- as.tibble(rnorm(10))
norm <- rename(norm, grade = value)
ggplot(norm, aes(norm$grade)) +
geom_histogram(bins=50) +
xlab('Grade') +
ggtitle('Distribution of 10 Random Values from a Normal Distribution')
norm <- as.tibble(rnorm(100))
norm <- rename(norm, grade = value)
ggplot(norm, aes(norm$grade)) +
geom_histogram(bins=50) +
xlab('Grade') +
ggtitle('Distribution of 100 Random Values from a Normal Distribution')
norm <- as.tibble(rnorm(50))
norm <- rename(norm, grade = value)
ggplot(norm, aes(norm$grade)) +
geom_histogram(bins=50) +
xlab('Grade') +
ggtitle('Distribution of 50 Random Values from a Normal Distribution')
norm <- as.tibble(rnorm(25))
norm <- rename(norm, grade = value)
ggplot(norm, aes(norm$grade)) +
geom_histogram(bins=50) +
xlab('Grade') +
ggtitle('Distribution of 25 Random Values from a Normal Distribution')
mean(norm$grade)
norm <- as.tibble(rnorm(1000000))
norm <- rename(norm, grade = value)
ggplot(norm, aes(norm$grade)) +
geom_histogram(bins=5) +
xlab('Grade') +
ggtitle('Distribution of 1,000,000 Random Values from a Normal Distribution')
ggplot(norm, aes(norm$grade)) +
geom_histogram(bins=10) +
xlab('Grade') +
ggtitle('Distribution of 1,000,000 Random Values from a Normal Distribution')
ggplot(norm, aes(norm$grade)) +
geom_histogram(bins=3) +
xlab('Grade') +
ggtitle('Distribution of 1,000,000 Random Values from a Normal Distribution')
ggplot(norm, aes(norm$grade, y=..density..)) +
geom_histogram(bins=3) +
xlab('Grade') +
ggtitle('Distribution of 1,000,000 Random Values from a Normal Distribution')
ggplot(norm, aes(norm$grade, y=..density..)) +
geom_histogram(bins=200) +
xlab('Grade') +
ggtitle('Distribution of 1,000,000 Random Values from a Normal Distribution')
ggplot(norm, aes(norm$grade)) +
geom_histogram(bins=200) +
geom_density() +
xlab('Grade') +
ggtitle('Distribution of 1,000,000 Random Values from a Normal Distribution')
ggplot(norm, aes(x = norm$grade, y=..density..)) +
geom_histogram(bins=200) +
geom_density() +
xlab('Grade') +
ggtitle('Distribution of 1,000,000 Random Values from a Normal Distribution')
ggplot(norm, aes(x = norm$grade, y=..density..)) +
geom_histogram(bins=100) +
geom_density() +
xlab('Grade') +
ggtitle('Distribution of 1,000,000 Random Values from a Normal Distribution')
ggplot(norm, aes(x = norm$grade, y=..density..)) +
geom_density() +
xlab('Grade') +
ggtitle('Distribution of 1,000,000 Random Values from a Normal Distribution')
ggplot(norm, aes(x = norm$grade )) +
geom_density() +
xlab('Grade') +
ggtitle('Distribution of 1,000,000 Random Values from a Normal Distribution')
ggplot(norm, aes(norm$grade)) +
geom_density() +
xlab('Grade') +
ggtitle('Distribution of 1,000,000 Random Values from a Normal Distribution')
ggplot(norm, aes(norm$grade)) +
geom_density() +
xlab('Grade') +
ggtitle('Density Plot of 1,000,000 Random Values from a Normal Distribution')
ggplot(norm, aes(norm$grade)) +
geom_density() +
xlab('Grade') +
ggtitle('Density Plot of 1,000,000 Random Values from a Normal Distribution')
ggplot(uni, aes(uni$grade)) +
#  geom_histogram(bins=200) +
geom_density() +
xlab('Grade') +
ggtitle('Distribution of 1,000,000 Random Values from a Uniform Distribution')
ggplot(uni, aes(uni$grade)) +
#  geom_histogram(bins=200) +
geom_density() +
xlab('Grade') +
ggtitle('Density Plot of 1,000,000 Random Values from a Uniform Distribution')
ggplot(lognorm, aes(lognorm$grade)) +
#  geom_histogram(bins=200) +
geom_density() +
xlab('Grade') +
ggtitle('Density Plot of 1,000,000 Random Values from a Log Normal Distribution')
duration = faithful$eruptions
> hist(duration,    # apply the hist function
+   right=FALSE)
duration = faithful$eruptions
hist(duration,    # apply the hist function
+   right=FALSE)
ggplot(duration, aes(duration))+geom_histogram()
duration
ggplot(as.tibble(duration), aes(duration$values))+geom_histogram()
ggplot(faithful$eruptions), aes(faithful$eruptions))+geom_histogram()
ggplot(faithful$eruptions, aes(faithful$eruptions))+geom_histogram()
faithful$eruptions
ggplot(faithful, aes(faithful$eruptions))+geom_histogram()
ggplot(faithful, aes(faithful$eruptions))+geom_histogram()+xlab('Duration of Eruption')+ggtitle("Duration of Eruptions at Old Faithful")
faithful
ggplot(faithful, aes(faithful$eruptions))+geom_histogram()+xlab('Duration of Eruption')+ggtitle("Duration of 272 Eruptions at Old Faithful")
ggplot(faithful, aes(faithful$eruptions))+geom_histogram(bins=5)+xlab('Duration of Eruption')+ggtitle("Duration of 272 Eruptions at Old Faithful")
ggplot(faithful, aes(faithful$eruptions))+geom_histogram(bins=3)+xlab('Duration of Eruption')+ggtitle("Duration of 272 Eruptions at Old Faithful")
ggplot(faithful, aes(faithful$eruptions))+geom_histogram(bins=4)+xlab('Duration of Eruption')+ggtitle("Duration of 272 Eruptions at Old Faithful")
lsat
library(ltm)
LSAT
ltm(LSAT)
ltm::anova.rasch(LSAT)
ltm::coef.rasch(LSAT)
ltm::cronbach.alpha(LSAT)
ltm::cronbach.alpha(LSAT$`Item 1`)
ltm::cronbach.alpha(LSAT)
cronbach.alpha(LSAT, CI = TRUE, B = 500)
url <- "http://www.uk.sagepub.com/dsur/study/DSUR%20Data%20Files/Chapter%2017/raq.dat"
dat <- read.table(url, header = TRUE)
library(dplyr)
url <- "http://www.uk.sagepub.com/dsur/study/DSUR%20Data%20Files/Chapter%2017/raq.dat"
dat <- read.table(url, header = TRUE)
LSAT
cronbach.alpha(LSAT, CI = TRUE, B = 500)
ltm::coef.rasch(LSAT)
ltm(LSAT)
rasch(LSAT)
lsat_r<-rasch(LSAT)
descript(lsat_r)
descript(LSAT)
LSAT
rowSums()
rowSums(LSAT)
rowSums(LSAT)/5
LSAT$total<-rowSums(LSAT)/5
View(LSAT)
cor(LSAT)
descript(LSAT)
descript(lsat_r)
rasch(LSAT)
descript(LSAT)
cor(LSAT)
LSAT$Item 6 <-0
LSAT$Item6 <-0
LSAT
cor(LSAT)
LSAT$Item6 <-1
cor(LSAT)
LSAT$Item6
LSAT$Item6[2]
LSAT$Item6[2]<-0
LSAT$Item6[5]<-0
LSAT$Item6[15]<-0
LSAT$Item6[25]<-0
cor(LSAT)
library(ltm)
LSAT
rasch(LSAT)
ltm(LSAT)
rasch(LSAT)
model<-rasch(LSAT)
model
LSAT
View(LSAT)
library(readr)
X546d80a0_e1a6_3f08_999b_6b080aff334b_10_pivot <- read_csv("~/Downloads/546d80a0-e1a6-3f08-999b-6b080aff334b-10_pivot.csv")
View(X546d80a0_e1a6_3f08_999b_6b080aff334b_10_pivot)
library(ltm)
View(X546d80a0_e1a6_3f08_999b_6b080aff334b_10_pivot)
library(readr)
df <- read_csv("~/Downloads/546d80a0-e1a6-3f08-999b-6b080aff334b-10_pivot.csv")
View(X546d80a0_e1a6_3f08_999b_6b080aff334b_10_pivot)
descript(df)
library(readr)
df_big <- read_csv("~/Downloads/1d72796a-22f1-30f6-842c-15a53a1a1da5-11_pivot.csv")
View(df_big)
df_big
mean(df_big)
mean(df_big)
summarize(df_big)
library(tidyverse)
summarize(df_big)
mean(df_big)
sum(df_big)
df_big %>% summarise_each(funs(mean))
ggplot(df_big %>% summarise_each(funs(mean)) + geom_density()
df_big %>% summarise_each(funs(mean))->df
df
ggplot(df)
ggplot(df) +geom_density()
ggplot(df, aes()) +geom_density()
df
unstack(df)
melt(df)
gather(df)
gather(df)->df3
df3
ggplot(df3, aes(value))+geom_density()
df
df_big
df3
test <- function(x,y){
plot(x+y, y-z)
}
test(1,2)
test <- function(x,y){
plot(x+y, y-x)
}
test(1,2)
my_func <- function(x,y){
print(x)
print(y)
}
my_func("this","that")
x<-"something else"
my_func("this","that")
print(x)
my_func <- function(x,y){
print(x)
print(y)
}
my_func <- function(x,y){
print(x)
print(y)
}
my_func <- function(x,y){
print(x)
print(y)
}
my_func <- function(x,y){
print(x)
print(y)
print(z)
}
my_func("this","that")
z <- "pop"
z <- "pop"
z <- "pop"
my_func <- function(x,y){
print(x)
print(y)
print(z)
}
my_func("this","that")
library(readr)
azgsod <- read_csv("~/Documents/My_Documents/ASU/cis 503/cis503_data_science_tools/data/azgsod.zip")
View(azgsod)
library(readr)
azgsod <- read_csv("~/Documents/My_Documents/ASU/cis 503/cis503_data_science_tools/data/azgsod.zip")
View(azgsod)
azgsod
setwd("~/")
setwd("~/Documents/My_Documents/ASU/cis 503/cis503_data_science_tools/")
azgsod <- read_csv("./data/azgsod.zip")
library(readr)
library(tidyverse)
azgsod <- read_csv("./data/azgsod.zip")
View(azgsod)
range(azgsod$temp)
lapply(azgsod, range)
summarise(azgsod$dewp)
lapply(azgsod, sd)
lapply(azgsod, range)
lapply(azgsod, range)
View(azgsod)
azgsod %>%
count(name)
azgsod %>%
count(name)
azgsod %>%
count(name) %>%
arrange(desc())
azgsod %>%
count(name) %>%
arrange(desc(n))
azgsod %>%
ggplot(aes(year, temp)) + geom_point()
azgsod %>%
ggplot(aes(year, temp)) + geom_point()
azgsod %>%
ggplot(aes(year, temp)) + geom_boxplot()
azgsod %>%
ggplot(aes(year, temp)) + geom_point()
azgsod %>%
ggplot(aes(year, temp)) + geom_boxplot()
azgsod %>%
ggplot(aes(year, temp)) + geom_boxplot(aes(group = year))
azgsod %>%
ggplot(aes(year, temp)) + geom_point(aes(group = year))
azgsod %>%
ggplot(aes(year, temp)) + geom_boxplot()
azgsod
azgsod %>%
mutate(yrmoda = ISOdatetime(.$year, .$mo, .$da, 0, 0, 0)) %>%
ggplot(aes(yrmoda, temp)) + geom_line()
davis %>%
select(year, mo, da, temp) %>%
mutate(yrmoda = ISOdatetime(.$year, .$mo, .$da, 0, 0, 0)) %>%
ggplot(aes(yrmoda, temp)) + geom_point()
azgsod %>%
filter(year==1980) %>%
mutate(yrmoda = ISOdatetime(.$year, .$mo, .$da, 0, 0, 0)) %>%
ggplot(aes(yrmoda, temp)) + geom_line()
azgsod %>%
filter(year==1980) %>%
mutate(yrmoda = ISOdatetime(.$year, .$mo, .$da, 0, 0, 0)) %>%
ggplot(aes(yrmoda, temp)) + geom_point()
azgsod %>%
group_by(year) %>%
summarise(mean_temp =mean(temp)) %>%
ggplot(aes(x=year, y=mean_temp)) + geom_point()
azgsod %>%
group_by(year, name) %>%
summarise(mean_temp = n()) %>%
ggplot(aes(year, mean_temp)) + geom_line(aes(group=name))
azgsod %>%
group_by(year, name) %>%
summarise(mean_temp = n()) %>%
ggplot(aes(year, mean_temp, color=name)) + geom_line()
azgsod %>%
group_by(year, name) %>%
summarise(count_temp = n()) %>%
ggplot(aes(year, log(count_temp), color=name)) + geom_line()
azgsod %>%
group_by(year) %>%
summarise(mean_temp =mean(temp)) %>%
ggplot(aes(x=year, y=mean_temp)) + geom_point()
azgsod %>%
group_by(year, name) %>%
summarise(count_temp = n()) %>%
ggplot(aes(year, count_temp)) + geom_bar(stat=identity)
azgsod %>%
group_by(year, name) %>%
summarise(count_temp = n()) %>%
ggplot(aes(year, count_temp)) + geom_bar()
azgsod %>%
group_by(year, name) %>%
summarise(count_temp = n()) %>%
ggplot(aes(count_temp)) + geom_bar()
azgsod %>%
group_by(year, name) %>%
summarise(count_temp = n()) %>%
ggplot(aes(count_temp)) + geom_histogram()
azgsod %>%
group_by(name) %>%
summarise(count_temp = n()) %>%
ggplot(aes(count_temp)) + geom_histogram()
azgsod %>%
filter(name == 'DAVIS-MONTHAN AFB AIRPORT') -> davis
library(modelr)
davis_mod <- lm(mean ~ factor(mo), data= david_monthly)
davis %>%
group_by(year, mo) %>%
summarise(mean= mean(temp)) -> davis_monthly
davis_mod <- lm(mean ~ factor(mo), data= davis_monthly)
summary(davis_mod)
david_monthly %>%
add_predictions(davis_mod) %>%
ggplot(aes(year + mo/12, pred)) + geom_line()
davis_monthly %>%
add_predictions(davis_mod) %>%
ggplot(aes(year + mo/12, pred)) + geom_line()
davis %>%
filter(year == 1980) %>%  # TODO: take out in order to add back in on the fly
select(year, mo, da, temp) %>%
mutate(yrmoda = ISOdatetime(.$year, .$mo, .$da, 0, 0, 0)) %>%
ggplot(aes(yrmoda, temp)) + geom_line()
davis %>%
#filter(year == 1980) %>%  # TODO: take out in order to add back in on the fly
select(year, mo, da, temp) %>%
mutate(yrmoda = ISOdatetime(.$year, .$mo, .$da, 0, 0, 0)) %>%
ggplot(aes(yrmoda, temp)) + geom_line()
davis_monthly %>%
add_predictions(davis_mod) %>%
ggplot(aes(year + mo/12, pred)) + geom_line()
david_monthly %>%
add_residuals(davis_mod) %>%
ggplot(aes(year + mo/12, resid)) + geom_point() +stat_smooth()
davis_monthly %>%
add_residuals(davis_mod) %>%
ggplot(aes(year + mo/12, resid)) + geom_point() +stat_smooth()
davis_monthly %>%
add_residuals(davis_mod) %>%
ggplot(aes(year + mo/12, resid)) + geom_point()
davis_monthly %>%
ggplot(aes(da, temp)) + geom_point() + facet_grid(mo)
davis %>%
group_by(year) %>%
summarise(mean_mo_temp = max(temp)) %>%
ggplot(aes(year, mean_mo_temp)) + geom_point() +stat_smooth()
davis %>%
select(year, mo, da, temp) %>%
mutate(yrmoda = ISOdatetime(.$year, .$mo, .$da, 0, 0, 0)) %>%
ggplot(aes(yrmoda, temp)) + geom_point()
davis %>%
filter(mo == 7) %>%
group_by(year,mo) %>%
summarise(mean_mo_temp = max(temp)) %>%
mutate(yrmoda = ISOdatetime(.$year, .$mo, .$da, 0, 0, 0)) %>%
ggplot(aes(year, mean_mo_temp)) + geom_point() +stat_smooth()
davis_monthly %>%
ggplot(aes(da, temp)) + geom_point() + facet_grid(mo)
davis_monthly
davis_monthly %>%
ggplot(aes(da, temp)) + geom_point()
davis_monthly
davis_monthly %>%
ggplot(aes(year, temp)) + geom_point()
davis_monthly %>%
add_residuals(davis_mod) %>%
ggplot(aes(year + mo/12, resid)) + geom_point()
davis_monthly %>%
add_predictions(davis_mod) %>%
ggplot(aes(year + mo/12, pred)) + geom_line()
davis_monthly %>%
add_residuals(davis_mod) %>%
ggplot(aes(year + mo/12, resid)) + geom_point()
davis %>%
group_by(year) %>%
summarise(mean_mo_temp = max(temp)) %>%
ggplot(aes(year, mean_mo_temp)) + geom_point() +stat_smooth()
davis %>%
filter(mo == 7) %>%
group_by(year,mo) %>%
summarise(mean_mo_temp = max(temp)) %>%
mutate(yrmoda = ISOdatetime(.$year, .$mo, .$da, 0, 0, 0)) %>%
ggplot(aes(year, mean_mo_temp)) + geom_point() +stat_smooth()
davis_monthly %>%
lm(mean ~ factor(mo))
summary(davis_mod)
